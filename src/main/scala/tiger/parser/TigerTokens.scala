/* Generated by Scala-Bison version 0.83 */

package tiger.parser
import tiger.Tree._


object TigerTokens {
  class YYSymbol;

  class YYToken extends YYSymbol;

  case class YYCHAR(yy: Char) extends YYToken {
    override def toString() : String = "'" + yy + "'";
  }
  case class YYEOF() extends YYToken;
  case class LITERAL(yy: String) extends YYToken;
  case class ID(yy: String) extends YYToken;
  case class NRO(yy: Integer) extends YYToken;
  case class TYPE() extends YYToken;
  case class ARRAY() extends YYToken;
  case class OF() extends YYToken;
  case class VAR() extends YYToken;
  case class FUNCTION() extends YYToken;
  case class LET() extends YYToken;
  case class IN() extends YYToken;
  case class END() extends YYToken;
  case class IF() extends YYToken;
  case class THEN() extends YYToken;
  case class ELSE() extends YYToken;
  case class WHILE() extends YYToken;
  case class DO() extends YYToken;
  case class FOR() extends YYToken;
  case class TO() extends YYToken;
  case class BREAK() extends YYToken;
  case class PTO() extends YYToken;
  case class DOSP() extends YYToken;
  case class DOSPIG() extends YYToken;
  case class COMA() extends YYToken;
  case class PCOMA() extends YYToken;
  case class IGUAL() extends YYToken;
  case class PI() extends YYToken;
  case class PD() extends YYToken;
  case class CI() extends YYToken;
  case class CD() extends YYToken;
  case class LI() extends YYToken;
  case class LD() extends YYToken;
  case class AMPER() extends YYToken;
  case class PIPE() extends YYToken;
  case class MENOR() extends YYToken;
  case class MENIG() extends YYToken;
  case class MAYOR() extends YYToken;
  case class MAYIG() extends YYToken;
  case class DIST() extends YYToken;
  case class MAS() extends YYToken;
  case class MENOS() extends YYToken;
  case class POR() extends YYToken;
  case class DIV() extends YYToken;
  case class NIL() extends YYToken;
}
